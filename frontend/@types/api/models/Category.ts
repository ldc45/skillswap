/* tslint:disable */
/* eslint-disable */
/**
 * SkillSwap API
 * API for the SkillSwap skills exchange platform
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * Unique identifier for the category
     * @type {string}
     * @memberof Category
     */
    id: string;
    /**
     * The name of the category
     * @type {string}
     * @memberof Category
     */
    name: string;
    /**
     * The color of the category in hex code
     * @type {string}
     * @memberof Category
     */
    color: string;
    /**
     * Date when the category was created
     * @type {Date}
     * @memberof Category
     */
    createdAt: Date;
    /**
     * Date when the category was last updated
     * @type {Date}
     * @memberof Category
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Category interface.
 */
export function instanceOfCategory(value: object): value is Category {
    if (!("id" in value) || value["id"] === undefined) return false;
    if (!("name" in value) || value["name"] === undefined) return false;
    if (!("color" in value) || value["color"] === undefined) return false;
    if (!("createdAt" in value) || value["createdAt"] === undefined)
        return false;
    if (!("updatedAt" in value) || value["updatedAt"] === undefined)
        return false;
    return true;
}

export function CategoryFromJSON(json: any): Category {
    return CategoryFromJSONTyped(json, false);
}

export function CategoryFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): Category {
    if (json == null) {
        return json;
    }
    return {
        id: json["id"],
        name: json["name"],
        color: json["color"],
        createdAt: new Date(json["createdAt"]),
        updatedAt: new Date(json["updatedAt"]),
    };
}

export function CategoryToJSON(json: any): Category {
    return CategoryToJSONTyped(json, false);
}

export function CategoryToJSONTyped(
    value?: Category | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        id: value["id"],
        name: value["name"],
        color: value["color"],
        createdAt: value["createdAt"].toISOString(),
        updatedAt: value["updatedAt"].toISOString(),
    };
}
