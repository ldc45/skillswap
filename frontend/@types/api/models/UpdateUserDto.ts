/* tslint:disable */
/* eslint-disable */
/**
 * SkillSwap API
 * API for the SkillSwap skills exchange platform
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface UpdateUserDto
 */
export interface UpdateUserDto {
    /**
     * User email address
     * @type {string}
     * @memberof UpdateUserDto
     */
    email?: string;
    /**
     * User password (minimum 8 characters)
     * @type {string}
     * @memberof UpdateUserDto
     */
    password?: string;
    /**
     * User first name
     * @type {string}
     * @memberof UpdateUserDto
     */
    firstName?: string;
    /**
     * User last name
     * @type {string}
     * @memberof UpdateUserDto
     */
    lastName?: string;
    /**
     * User biography
     * @type {string}
     * @memberof UpdateUserDto
     */
    biography?: string;
    /**
     * Indicates if the user account is archived
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    isArchived?: boolean;
    /**
     * User avatar URL
     * @type {string}
     * @memberof UpdateUserDto
     */
    avatarUrl?: string;
}

/**
 * Check if a given object implements the UpdateUserDto interface.
 */
export function instanceOfUpdateUserDto(value: object): value is UpdateUserDto {
    return true;
}

export function UpdateUserDtoFromJSON(json: any): UpdateUserDto {
    return UpdateUserDtoFromJSONTyped(json, false);
}

export function UpdateUserDtoFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): UpdateUserDto {
    if (json == null) {
        return json;
    }
    return {
        email: json["email"] == null ? undefined : json["email"],
        password: json["password"] == null ? undefined : json["password"],
        firstName: json["firstName"] == null ? undefined : json["firstName"],
        lastName: json["lastName"] == null ? undefined : json["lastName"],
        biography: json["biography"] == null ? undefined : json["biography"],
        isArchived: json["isArchived"] == null ? undefined : json["isArchived"],
        avatarUrl: json["avatarUrl"] == null ? undefined : json["avatarUrl"],
    };
}

export function UpdateUserDtoToJSON(json: any): UpdateUserDto {
    return UpdateUserDtoToJSONTyped(json, false);
}

export function UpdateUserDtoToJSONTyped(
    value?: UpdateUserDto | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        email: value["email"],
        password: value["password"],
        firstName: value["firstName"],
        lastName: value["lastName"],
        biography: value["biography"],
        isArchived: value["isArchived"],
        avatarUrl: value["avatarUrl"],
    };
}
